# Generated by Django 3.0.11 on 2021-04-21 11:42

from django.db import migrations, models
import solid_backend.content.fields


def conservation_lowercase(apps, schema_editor):
    """
    Transform all values of conservation to start with lowercase letters.
    """
    FormalAspect = apps.get_model("ais_content", "FormalAspect")

    for obj in FormalAspect.objects.all():
        obj.conserv = obj.conserv[0].lower() + obj.conserv[1:]
        obj.save()


def conservation_uppercase(apps, schema_editor):
    """
    Transform all values of conservation to start with capital letters.
    """
    FormalAspect = apps.get_model("ais_content", "FormalAspect")

    for obj in FormalAspect.objects.all():
        obj.conserv = obj.conserv.capitalize()
        obj.save()



class Migration(migrations.Migration):

    dependencies = [
        ('ais_content', '0007_auto_20210421_1325'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='formalaspect',
            options={'verbose_name': 'Formale Aspekte', 'verbose_name_plural': 'Formale Aspekte'},
        ),
        migrations.AlterField(
            model_name='formalaspect',
            name='conserv',
            field=models.CharField(choices=[('vollständig', 'vollständig'), ('annähernd vollständig', 'annähernd vollständig'), ('sehr gut', 'sehr gut'), ('gut', 'gut'), ('mäßig', 'mäßig'), ('stark fragmentiert', 'stark fragmentiert'), ('schlecht', 'schlecht')], max_length=21, verbose_name='Erhaltung'),
        ),
        migrations.AlterField(
            model_name='formalaspect',
            name='measures',
            field=models.CharField(max_length=200, verbose_name='Maße (in cm)'),
        ),
        migrations.AlterField(
            model_name='formalaspect',
            name='surface',
            field=solid_backend.content.fields.ConcatCharField(blank=True, concat_choices=[((None, '---------'), ('unbehandelt', 'unbehandelt'), ('geglättet', 'geglättet'), ('poliert', 'poliert'), ('bemalt', 'bemalt'), ('engobiert', 'engobiert'), ('glasiert', 'glasiert'), ('geschnitten', 'geschnitten'), ('geritzt', 'geritzt'), ('kammstrichverziert', 'kammstrichverziert'), ('mit Applikation (frei Hand)', 'mit Applikation (frei Hand)'), ('mit Applikation (aus der Model)', 'mit Applikation (aus der Model)'), ('in Barbotine-Technik verziert', 'in Barbotine-Technik verziert'), ('komplexe Merkmalskombination', 'komplexe Merkmalskombination')), ((None, '---------'), ('unbehandelt', 'unbehandelt'), ('geglättet', 'geglättet'), ('poliert', 'poliert'), ('bemalt', 'bemalt'), ('engobiert', 'engobiert'), ('glasiert', 'glasiert'), ('geschnitten', 'geschnitten'), ('geritzt', 'geritzt'), ('kammstrichverziert', 'kammstrichverziert'), ('mit Applikation (frei Hand)', 'mit Applikation (frei Hand)'), ('mit Applikation (aus der Model)', 'mit Applikation (aus der Model)'), ('in Barbotine-Technik verziert', 'in Barbotine-Technik verziert'), ('komplexe Merkmalskombination', 'komplexe Merkmalskombination')), ((None, '---------'), ('unbehandelt', 'unbehandelt'), ('geglättet', 'geglättet'), ('poliert', 'poliert'), ('bemalt', 'bemalt'), ('engobiert', 'engobiert'), ('glasiert', 'glasiert'), ('geschnitten', 'geschnitten'), ('geritzt', 'geritzt'), ('kammstrichverziert', 'kammstrichverziert'), ('mit Applikation (frei Hand)', 'mit Applikation (frei Hand)'), ('mit Applikation (aus der Model)', 'mit Applikation (aus der Model)'), ('in Barbotine-Technik verziert', 'in Barbotine-Technik verziert'), ('komplexe Merkmalskombination', 'komplexe Merkmalskombination'))], default='', max_length=400, seperators=[', ', ' und '], verbose_name='Oberflächenbehandlung'),
        ),
        migrations.RunPython(code=conservation_lowercase, reverse_code=conservation_uppercase)
    ]
